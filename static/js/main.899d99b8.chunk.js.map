{"version":3,"sources":["App.js","action.js","reducer.js","index.js"],"names":["mapDispatchToProps","onAdd","event","type","payload","target","getAttribute","onClear","connect","state","winGrid","squares","count","clickHandler","s_sign","isWin","alert","setTimeout","s_search","is_win","i","i_count","j","className","map","square","key","onClick","data","reducer","Array","fill","action","currentSquares","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"wPAwEMA,G,MAAqB,CACzBC,MCzEiB,SAACC,GAAD,MAAY,CAC7BC,KAAM,MACNC,QAASF,EAAMG,OAAOC,aAAa,UDwEnCC,QCrEmB,iBAAO,CAC1BJ,KAAM,YDuEOK,eAXS,SAACC,GACvB,MAAO,CACLA,WASoCT,EAAzBQ,EAxEH,SAAC,GAA6B,IAA5BP,EAA2B,EAA3BA,MAAOM,EAAoB,EAApBA,QAASE,EAAW,EAAXA,MACtBC,EAAU,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGJC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,MACd,SAASC,EAAaX,GACpB,IAAIY,EAAUF,EAAM,IAAM,EAAK,IAAM,IAErCX,EAAMC,GACHa,MAEDC,MAAOF,EAAS,SAChBG,YAAW,WACTV,MACC,MAKP,IAAMQ,EAAQ,WACZ,IAAMG,EAAYN,EAAM,IAAM,EAAK,IAAM,IACrCO,GAAS,EACb,IAAI,IAAIC,KAAKV,EACb,CACE,IAAIW,EAAU,EACd,IAAI,IAAIC,KAAKZ,EAAQU,GAInB,GAFGT,EAAQD,EAAQU,GAAGE,MAAQJ,IAC5BG,GAAW,GACE,IAAZA,EACH,CACEF,GAAS,EACT,OAIN,OAAOA,GAUT,OACE,yBAAKI,UAAU,eANRZ,EAAQa,KAAI,SAACC,EAAQL,GAC1B,OAAQ,yBAAKG,UAAU,WAAWG,IAAKN,EAAGO,QAASd,EAAce,KAAMR,GAAIT,EAAQS,W,OE9B1ES,EAzBC,WAAiE,IAAhEpB,EAA+D,uDAAvD,CAACE,QAAS,IAAImB,MAAM,GAAGC,KAAK,IAAKnB,MAAO,GAAIoB,EAAW,uCAE9E,OAAOA,EAAO7B,MACZ,IAAK,MACH,IAAIyB,EAAOI,EAAO5B,QACd6B,EAAiBxB,EAAME,QAC3B,GAA4B,KAAzBsB,EAAeL,GAAc,CAC9B,IAAId,EAAUL,EAAMG,MAAM,IAAM,EAAK,IAAM,IAE3C,OADAqB,EAAeL,GAAQd,EAChB,eAAIL,EAAX,CAAkBE,QAASsB,EAAgBrB,MAAOH,EAAMG,MAAQ,IAKhE,OADAI,MAAM,oBACCP,EAGX,IAAK,QACH,MAAO,CAACE,QAAS,IAAImB,MAAM,GAAGC,KAAK,IAAKnB,MAAO,GAEjD,QACE,OAAOH,ICbPyB,G,MAAQC,YAAYN,IAE1BO,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.899d99b8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport * as actions from '../src/action'\nimport {connect} from 'react-redux';\n\nconst App = ({onAdd, onClear, state}) => {\n  const winGrid = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  let {squares, count} = state\n  function clickHandler(event) {\n    let s_sign = (count%2 === 0) ? 'X' : 'O'\n\n    onAdd(event)\n    if(isWin())\n    {\n      alert( s_sign + ' won!');\n      setTimeout(() => {\n        onClear()\n      }, 3000)\n\n    }\n  }\n\n  const isWin = () => {\n    const s_search = (count%2 === 0) ? 'X' : 'O';\n    let is_win = false;\n    for(let i in winGrid)\n    {\n      let i_count = 0;\n      for(let j in winGrid[i])\n      {\n        if(squares[winGrid[i][j]] === s_search)\n          i_count += 1\n        if(i_count === 3)\n        {\n          is_win = true;\n          break;\n        }\n      }\n    }\n    return is_win;\n  }\n\n  const getGrid = () => {\n\n    return squares.map((square, i) => {\n      return (<div className=\"ttt-grid\" key={i} onClick={clickHandler} data={i}>{squares[i]}</div>)\n    })\n  }\n\n  return (\n    <div className=\"tic-tac-toe\">\n      { getGrid() }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    state\n  }\n}\n\nconst mapDispatchToProps = {\n  onAdd: actions.add,\n  onClear: actions.clear\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const add = (event) => ({\n  type: 'ADD',\n  payload: event.target.getAttribute('data')\n})\n\nexport const clear = () => ({\n  type: 'CLEAR'\n})","const reducer = (state = {squares: new Array(9).fill(''), count: 0}, action) => {\n\n  switch(action.type) {\n    case 'ADD':\n      let data = action.payload\n      let currentSquares = state.squares\n      if(currentSquares[data] === '') {\n        let s_sign = (state.count%2 === 0) ? 'X' : 'O'\n        currentSquares[data] = s_sign\n        return {...state, squares: currentSquares, count: state.count + 1}\n      }\n      else\n      {\n        alert('it is impossible')\n        return state\n      }\n\n    case 'CLEAR':\n      return {squares: new Array(9).fill(''), count: 0}\n\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport App from './App';\nimport reducer from \"./reducer\";\nimport './index.css';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}